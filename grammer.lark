 ?start: value

    ?value: object
          | array
          | string
          | SIGNED_NUMBER      -> number
          | "true"             -> true
          | "false"            -> false
          | "null"             -> null
          | methods
          | expression
          | group
          | statement
          | ifcondition
          | elifcondition
          | elsecondition
          | conditionstatement
          | ternarystatement
          | blockbody
          | assignment
          | varname

    array  : "[" [value ("," value)*] "]"
    object : "{" [pair ("," pair)*] "}"
    pair   : string ":" value

    string : ESCAPED_STRING

    propmethod: "Prop(" ESCAPED_STRING ")"
    lookupmethod: "Lookup(" ESCAPED_STRING ")"
    lenmethod: "LEN(" ESCAPED_STRING | propmethod | lookupmethod ")"
    methods: propmethod | lookupmethod | lenmethod
    andcondition: "AND"
    orcondition: "OR"
    condition: andcondition | orcondition
    eq: "=="
    ternary: "?"
    color: ":"
    operator: eq
    leftexpression: ESCAPED_STRING | SIGNED_NUMBER | methods
    expressionvalue: ESCAPED_STRING | SIGNED_NUMBER | methods
    expression : (leftexpression | group) operator (expressionvalue | group)
    groupstart: "("
    groupend: ")"
    group: "(" (groupstart)* expression [condition (expression | group)]* (groupend)* ")"
    statement: (group | expression) [condition (group | expression)]*
    ifcondition: "if" statement "{" (blockbody)* "}"
    elifcondition: "elif" statement "{" (blockbody)* "}"
    elsecondition: "else" "{" (blockbody)* "}"
    conditionstatement: ifcondition (elifcondition)* (elsecondition)?
    ternarystatement: statement "?" (methods | expressionvalue) ":" (methods | expressionvalue)
    assignment: "var" varname "="+ (ESCAPED_STRING | SIGNED_NUMBER) ";"
    blockbody: (assignment)* (ternarystatement)* (conditionstatement)*
    varname: /[0-9a-zA-Z]/*

    %import common.ESCAPED_STRING
    %import common.SIGNED_NUMBER
    %import common.WS

    %ignore WS
